{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "0b3dc60a",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-11-19T16:18:07.002675Z",
     "iopub.status.busy": "2024-11-19T16:18:07.002144Z",
     "iopub.status.idle": "2024-11-19T16:18:07.971039Z",
     "shell.execute_reply": "2024-11-19T16:18:07.969968Z"
    },
    "papermill": {
     "duration": 0.975458,
     "end_time": "2024-11-19T16:18:07.973403",
     "exception": false,
     "start_time": "2024-11-19T16:18:06.997945",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/tryresnet/pytorch/default/1/resnet50_cassava.pth\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "c8653b9f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-19T16:18:07.980256Z",
     "iopub.status.busy": "2024-11-19T16:18:07.979323Z",
     "iopub.status.idle": "2024-11-19T16:18:07.984031Z",
     "shell.execute_reply": "2024-11-19T16:18:07.983047Z"
    },
    "papermill": {
     "duration": 0.010241,
     "end_time": "2024-11-19T16:18:07.986032",
     "exception": false,
     "start_time": "2024-11-19T16:18:07.975791",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "model_path = '/kaggle/input/tryresnet/pytorch/default/1/resnet50_cassava.pth'\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "f3091e62",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-19T16:18:07.991668Z",
     "iopub.status.busy": "2024-11-19T16:18:07.991245Z",
     "iopub.status.idle": "2024-11-19T16:18:14.996725Z",
     "shell.execute_reply": "2024-11-19T16:18:14.995568Z"
    },
    "papermill": {
     "duration": 7.012,
     "end_time": "2024-11-19T16:18:15.000122",
     "exception": false,
     "start_time": "2024-11-19T16:18:07.988122",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=None`.\n",
      "  warnings.warn(msg)\n",
      "/tmp/ipykernel_17/725816494.py:13: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.\n",
      "  model.load_state_dict(torch.load(model_path))\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model loaded successfully!\n"
     ]
    }
   ],
   "source": [
    "import torch\n",
    "from torchvision.models import resnet50\n",
    "\n",
    "# Define the model architecture\n",
    "model = resnet50(pretrained=False)\n",
    "\n",
    "# Modify the fully connected layer to match the saved model's architecture\n",
    "num_classes = 5  # Adjust this to match your dataset\n",
    "model.fc = torch.nn.Linear(model.fc.in_features, num_classes)\n",
    "\n",
    "# Load the saved weights\n",
    "model_path = '/kaggle/input/tryresnet/pytorch/default/1/resnet50_cassava.pth'\n",
    "model.load_state_dict(torch.load(model_path))\n",
    "\n",
    "# Set the model to evaluation mode\n",
    "model.eval()\n",
    "\n",
    "print(\"Model loaded successfully!\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c1050c5f",
   "metadata": {
    "papermill": {
     "duration": 0.003029,
     "end_time": "2024-11-19T16:18:15.006257",
     "exception": false,
     "start_time": "2024-11-19T16:18:15.003228",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "isSourceIdPinned": true,
     "modelId": 165457,
     "modelInstanceId": 142878,
     "sourceId": 167936,
     "sourceType": "modelInstanceVersion"
    }
   ],
   "dockerImageVersionId": 30786,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.14"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 11.941021,
   "end_time": "2024-11-19T16:18:16.233995",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-11-19T16:18:04.292974",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
